% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/APA2.Regression.R, R/APA2.list.R, R/APA2_.R,
%   R/APA2_ICC.R, R/APA2_Kaplan_Meier.R, R/APA2_formula.R, R/APA2_manova.R,
%   R/APA2_principal.R
\name{APA2.lm}
\alias{APA2.lm}
\alias{APA2.anova}
\alias{APA2.htest}
\alias{APA2.pairwise.htest}
\alias{APA_lme}
\alias{APA_mediate}
\alias{APA_aovlist}
\alias{APA_anova.lme}
\alias{APA_lmerMod}
\alias{APA_merModLmerTest}
\alias{APA2.list}
\alias{APA2}
\alias{APA2.glht}
\alias{APA2.summary.table}
\alias{APA2.default}
\alias{APA2.table}
\alias{APA2.xtabs}
\alias{APA2.eff}
\alias{APA2.efflist}
\alias{APA2.bland_altman}
\alias{APA.ICC}
\alias{APA2.summary.survfit}
\alias{APA2.survfit}
\alias{APA2.survdiff}
\alias{APA2.coxph}
\alias{APA2.formula}
\alias{APA2.aovlist}
\alias{APA2.manova}
\alias{APA2.lda}
\alias{APA2.fa}
\alias{APA2.principal}
\title{Auswertungs Tabellen}
\usage{
\method{APA2}{lm}(...)

\method{APA2}{anova}(fit, ...)

\method{APA2}{htest}(x, caption = "", ...)

\method{APA2}{pairwise.htest}(x, caption = "", ...)

APA_lme(fit, caption = "", note = "", type = "III", anova = TRUE,
  anova_type = "F", ...)

APA_mediate(l, ...)

APA_aovlist(...)

APA_anova.lme(fit, ...)

APA_lmerMod(fit, ...)

APA_merModLmerTest(fit, caption = "", note = "", anova = TRUE,
  random.effects = TRUE, ...)

\method{APA2}{list}(x, caption = "", note = "", digits = 2,
  custom.model.names = NULL, include.custom = NULL, include.b = TRUE,
  include.ci = FALSE, include.odds = FALSE, include.se = if (include.ci)
  FALSE else TRUE, include.p = FALSE, include.stars = if (include.p) FALSE
  else TRUE, include.ftest = FALSE, include.loglik = FALSE,
  include.pseudo = TRUE, include.r = TRUE, include.aic = TRUE,
  include.bic = include.aic, ci.level = 0.95, rgroup = c("Parameter",
  "Goodness of fit"), output = stp25output:::which_output(), ...)

APA2(x, ...)

\method{APA2}{glht}(x, caption = "Multiple Comparisons of Means", note = "",
  include.ci = TRUE, level = 0.95, ...)

\method{APA2}{summary.table}(x, ...)

\method{APA2}{default}(x, ..., caption = "", output = TRUE)

\method{APA2}{table}(...)

\method{APA2}{xtabs}(...)

\method{APA2}{eff}(...)

\method{APA2}{efflist}(x, caption = "Effekte: ", type = NULL, note = "",
  digits = 2, include.fit = TRUE, include.n = FALSE, include.ci = TRUE,
  include.se = FALSE, ...)

\method{APA2}{bland_altman}(...)

\method{APA}{ICC}(x, caption = "ICC", type = c(1, 4))

\method{APA2}{summary.survfit}(fit, digits = NULL, percent = FALSE,
  include = c(time = "time", n.risk = "n.risk", n.event = "n.event", surv =
  "survival", std.err = "std.err", lower = "lower 95\% CI", upper =
  "upper 95\% CI"), ...)

\method{APA2}{survfit}(fit, caption = "NULL", note = "", type = 1,
  digits = 2, ...)

\method{APA2}{survdiff}(fit, caption = "Test Survival Curve Differences",
  note = "")

\method{APA2}{coxph}(fit, caption = "", note = "", ...)

\method{APA2}{formula}(x, data = NULL, caption = "", fun = NULL,
  type = c("auto", "freq", "mean", "median", "ci", "multiresponse", "cohen.d",
  "effsize", "freq.ci", "describe"), note = "", na.action = na.pass,
  test = FALSE, sig.star = TRUE, p.value = FALSE, pvalues = if (p.value)
  p.value else FALSE, print.n = NULL, corr_test = "pearson",
  cor_diagonale_up = TRUE, direction = "long", order = FALSE,
  decreasing = TRUE, total = FALSE, use.level = 1, include.n = TRUE,
  include.all.n = print.n, include.header.n = TRUE, include.total = total,
  include.test = test, include.p = pvalues, include.sig.star = sig.star,
  include.names = FALSE, include.labels = TRUE, digits = NULL,
  digits.mean = if (!is.null(digits)) c(digits, digits) else NULL,
  digits.percent = if (is.null(digits))
  options()$stp25$apa.style$prozent$digits else c(digits, 0), output = TRUE,
  ...)

\method{APA2}{aovlist}(x, ...)

\method{APA2}{manova}(x, test = "Wilks", ...)

\method{APA2}{lda}(x, fit_predict = MASS:::predict.lda(x),
  newdata = model.frame(x), ...)

\method{APA2}{fa}(...)

\method{APA2}{principal}(x, caption = "", note = "", digits = 2,
  all = FALSE, cut = 0.3, sort = TRUE, suppress.warnings = TRUE, ...)
}
\arguments{
\item{...}{an texreg:::extract}

\item{x}{Liste mit fits}

\item{caption, note}{Ueberschrift}

\item{type}{moeglich sind \code{c("auto", "freq", "mean", "median", "ci", "freq.ci")} also Haufigkeit, Mittelwert, Median und neu sind 95 CIs}

\item{digits}{Kommastellen bei einer liste  muss exakt die Reighenfolge eingehalten werden}

\item{custom.model.names}{Namen}

\item{include.custom}{liste mit Statistiken für Gofs}

\item{include.ci}{Cis}

\item{include.se, include.ci, include.odds}{SE, 95-Ci, OR noch nicht fertig}

\item{include.p, include.stars}{p-Werte explizit}

\item{include.ftest, include.loglik}{noch nicht fertig}

\item{include.r, include.pseudo}{pseudo R}

\item{include.aic, include.bic}{geht nur zusammen}

\item{ci.level}{Ci default 95 Prozent}

\item{rgroup}{Zwischen beschriftung}

\item{output}{Ausgabe von Ergebiss ueber Output}

\item{include.n, include.all.n, include.header.n}{N mit ausgeben}

\item{data}{Data.frame}

\item{fun, na.action, direction}{eigene Funktion na.action=na.pass
(Auswertung ueeber die Funktionen \code{melt, cast}.)}

\item{test, include.test, corr_test}{Sig test bei  \code{type = auto} moegliche Parameter sind  test=TRUE, test="conTest" oder "sapiro.test" fuer den Test auf Normalverteilung, fuer SPSS-like \code{test=="wilcox.test"}  oder \code{test=="kruskal.test"}
corr_test-ddefault ist  "pearson" c("pearson","spearman")}

\item{print.n, sig.star, pvalues, total}{veraltet jetzt include.n verwenden}

\item{cor_diagonale_up}{bei Correlation art der Formatierung}

\item{order, decreasing}{Sortieren   Reihenfolge der Sortierung}

\item{use.level}{Benutzter level in Multi zB ja/nein}

\item{include.total}{Total}

\item{include.names, include.labels}{Beschriftung der zeilen}

\item{x}{Ein R Objekt oder eine Formel oder ein data.frame}

\item{...}{weitere Argumente}

\item{x}{multcomp Objekt}

\item{caption, note}{Überschrift}

\item{...}{nicht benutzt}

\item{caption, note}{UeberschriftNote}

\item{include.p, include.sig.star}{p_Werte Sternchen}

\item{digits, digits.mean, digits.percent}{Nachkommastellen}
}
\value{
Output mit html und Ergebnisse als data.frame

Einen invisible data.frame Objekt oder eine Liste mit Dataframes Sowie ein direkter Output ueber cat

dataframe mit p.werte
}
\description{
A Poisson regression was run to predict the number of publications an academic publishes in the last 12 months based on the experience of the academic and the number of hours an academic spends each week working on research. For every extra hour worked per week on research, 1.044 (95% CI, 1.004 to 1.085) times more publications were published, a statistically significant result, p = .030.
https://statistics.laerd.com/spss-tutorials/poisson-regression-using-spss-statistics.php

Regressions  Tabelle Kopie von  texreg:::aggregate.matrix

Auswertung und Erstellung von Formatierten Tabellen.

Kopie von multcomp glht
}
\section{Methods (by class)}{
\itemize{
\item \code{table}: Wenn explizit eine Kreuztabelle erstellt werden soll ist die Funktion \code{xtabs} zu
verwenden. dabei verweist APA2 auf \link{APA_Xtabs}

\item \code{formula}: Hier
    werden Haefigkeiten, Mittelwerte, Gruppenvergleiche und einfache Tests
     Erstellt analog wie die Hmisc:summary.

     Formel: Links stehen die Zielvariablen rechts die Gruppen.
     Fie Formel  \code{a1 + a2[4] +a3 ~ group1 + group2} ergibt zwei Auswertungen also
     zwei Tabellen und nicht eine verschachtelte Tabelle. Die Zahle in eckiger Klammer
     sind die Nachkommastellen. Achtung die Formeln sind auf 500 zeichen begrenzt (Limitation von der Funktion \code{deparse()})

     Einstellungen werden global mit
     \code{set_my_options(prozent=list(digits=c(1,0), style=2))}
     \code{get_my_options()$apa.style$prozent}
     bewerkstelligt
}}

\examples{
 library(lmerTest)
fit1<-              lm(chol0 ~  ak + rrs0 + med + g, hyper)
fit2<-             glm(chol0 ~ med +   ak +   g + rrs0 , hyper, family = poisson())
fit3 <- lmerTest::lmer(chol0 ~ rrs0 + med +  ak  +  (1|g) , hyper )
fits<- list(fit1,fit2, fit3)

APA2.list(fits,
          custom.model.names=c("lm", "glm", "lmer"),
          digits= list(c(1,2,3,4,5,6,7),
                       c(1,2,3,4,5,6,7),
                       c(1,2,3,4,5,6))
          include.custom=list(
                       Wald=c("F(1)=245", "F(2)=245","F(3)=245"),
                       Chi=c("X(4)=2.45", "X(5)=24.5","X(6)=24.5")
          )
)
library(multcomp)
 ### multiple linear model, swiss data
 lmod <- lm(Fertility ~ ., data = swiss)

 ### test of H_0: all regression coefficients are zero
 ### (ignore intercept)

### define coefficients of linear function directly
K <- diag(length(coef(lmod)))[-1,]
rownames(K) <- names(coef(lmod))[-1]
K
### set up general linear hypothesis
APA2(glht(lmod, linfct = K))

#-- APA2.summary.table

a <- letters[1:3]
APA2(summary(table(a, sample(a))))
#-- APA2.table => APA_Xtabs
# a <- letters[1:3] APA2(table(a, sample(a)))
# Beispiele unter ?APA_Xtabs


#-- APA2.formula --

APA2(chol0+chol1 ~ g, hyper, print.n=FALSE)
APA2(~ g, hyper, caption="Einfache Tabelle")
APA2(chol0+chol1 ~ g, hyper, caption="Spalte mit Characteristik loeschen", print_col=-2)
APA2(gew + rrs0 ~ g, hyper, print.n=FALSE, test=TRUE)
APA2(~chol0+chol1~chol6+chol12, hyper, caption="Korrelation", test=TRUE)
APA2(~chol0+chol1+chol6+chol12, hyper, caption="Korrelation", test=TRUE, sig.star=FALSE)

#End()

}
